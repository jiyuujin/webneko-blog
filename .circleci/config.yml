version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.1.0
  aws-ecr: circleci/aws-ecr@7.3.0
  aws-ecs: circleci/aws-ecs@2.2.1

executors:
  aws-cli:
    working_directory: ~/workspace
    environment:
      AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
      AWS_DEFAULT_REGION: ap-northeast-1
    docker:
      - image: amazon/aws-cli
  default:
    working_directory: ~/workspace
    environment:
      CTF_SPACE_ID: $CTF_SPACE_ID
      CTF_CDA_ACCESS_TOKEN: $CTF_CDA_ACCESS_TOKEN
    docker:
      - image: circleci/node:14

commands:
  prepare_node_dependency:
    description: Prepare
    steps:
      - checkout

      - run: sudo apt-get update && sudo apt-get install -y nasm autoconf automake libtool dpkg libpng-dev g++

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - setup_remote_docker:
          version: 19.03.13

      - run:
          name: Setup common environment variables
          command: |
            echo 'export ECR_REPOSITORY="webneko-blog"' >> $BASH_ENV
            echo 'export FULL_IMAGE_NAME="${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-1.amazonaws.com/${ECR_REPOSITORY}:${CIRCLE_SHA1}"' >> $BASH_ENV
            touch .env

      - run:
          name: bash
          command: |
            echo "SENTRY_DSN=${SENTRY_DSN}" >> .env
            echo "LHCI_GITHUB_APP_TOKEN=${LHCI_GITHUB_APP_TOKEN}" >> .env
            echo "CTF_BLOG_POST_TYPE_ID=${CTF_BLOG_POST_TYPE_ID}" >> .env
            echo "CTF_SPACE_ID=${CTF_SPACE_ID}" >> .env
            echo "CTF_CDA_ACCESS_TOKEN=${CTF_CDA_ACCESS_TOKEN}" >> .env

  package_and_deploy:
    description: Deploy
    steps:
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          region: AWS_REGION
          repo: webneko-blog
          tag: '${CIRCLE_SHA1}'

jobs:
  install_and_setup_cli:
    executor:
      name: aws-cli
    steps:
      - aws-cli/install
      - aws-cli/setup

  master_build:
    executor:
      name: default
    steps:
      - checkout
      - aws-cli/install
      - aws-cli/setup
      - prepare_node_dependency
      - package_and_deploy

workflows:
  version: 2
  push:
    jobs:
      - master_build:
          filters:
            branches:
              only: master
